#!/usr/bin/env bash

set -eu

readonly THIS_CMD="${0##*/}"
readonly VERSION="0.0.1"
readonly URI='https://websh.jiro4989.com/api/shellgei'

_main() {

    # 引数なしのときはヘルプを出力して終了
    if [[ $# -lt 1 ]]
    then
        _help
        exit 0
    fi

    # jqがインストールされていなければエラーで終了
    command -v jq &>/dev/null || {
        _err "jq is not installed. (https://github.com/stedolan/jq)"
        exit 1
    }

    local show_info='false'
    local save_images='true'

    # 引数をパース
    while [ $# -gt 0 ]
    do
        case "$1" in
        -h|--help)
            _help
            exit 0
            ;;
        -V|--version)
            echo "$THIS_CMD -- Version $VERSION"
            exit 0
            ;;
        -v|--verbose)
            show_info='true'
            ;;
        -n|--no-save_images)
            save_images='false'
            ;;
        --)
            shift
            break
            ;;
        *)
            break
            ;;
        esac

        shift
    done

    #for arg in "$@"
    #do
    #    echo $arg
    #done

    result="$(_post_websh "$@")"

    _print_stdout "$result"
    _print_stderr "$result"

    if "${show_info}"
    then
        _print_info "$result"
    fi
}

# 標準出力をそのまま出力
_print_stdout() {
    jq -r '.stdout' <<< "$@"
}

# エラーを出力
_print_stderr() {
    stderr="$(jq -r '.stderr' <<< "$@")"
    if [ -n "$stderr" ]
    then
        _err "$stderr"
    fi
}

# 詳細情報を出力
_print_info() {
    status="$(jq -r '.status' <<< "$@")"
    [ -n "$status" ] && _info "status: $status"

    system_message="$(jq -r '.system_message' <<< "$@")"
    [ -n "$system_message" ] && _info "system_message: $system_message"

    elapsed_time="$(jq -r '.elapsed_time' <<< "$@")"
    [ -n "$elapsed_time" ] && _info "elapsed_time: $elapsed_time"
}

_help() {
cat << EOS
Execute commands on ShellgeiBot using websh API

USAGE:
    $THIS_CMD -h | --help
    $THIS_CMD -V | --version
    $THIS_CMD [OPTIONS] [--] CODE

EXAMPLES:
    $THIS_CMD 'echo hello'
    echo 'echo hello' | $THIS_CMD
    $THIS_CMD 'screenfetch | textimg -s'

OPTIONS:
    -h --help                   Display this help and exit
    -V --version                Display this version and exit
    -i --info                   Show detail information
    -n --no-save-images         Not save images
EOS
}

_err() {
    echo -e "[ \e[31mERR\e[m ] "$*" " >&2
}

_info() {
    echo -e "[ \e[36mINFO\e[m ] $*" >&2
}

_post_websh() {
    local code="${*}"
    local body="{
        \"code\": \"$code\",
        \"images\": []
    }"

    curl --silent --request POST --data "$body" $URI
}

_main "$@"
exit $?
